# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txtj
snippet feat 'Commit message for new feature' b
feat(${1}): ${2}
endsnippet

snippet fix 'Commit message for resolve fixes' b
fix(${1}): ${2}
endsnippet

snippet refactor 'Commit message for refactor feature' b
refactor(${1}): ${2}
endsnippet

snippet config 'Commit message for configuration' b
config(${1}): ${2}
endsnippet

snippet style 'Commit message for modify styles' b
style(${1}): ${2}
endsnippet

snippet build 'Commit message for make build' b
build(${1}): ${2}
endsnippet

snippet ci 'Commit message for modify ci' b
ci(${1}): ${2}
endsnippet

snippet docs 'Commit message for add docs' b
docs(${1}): ${2}
endsnippet

snippet perf 'Commit message for change in performance' b
perf(${1}): ${2}
endsnippet

snippet test 'Commit message for change in test' b
test(${1}): ${2}
endsnippet

