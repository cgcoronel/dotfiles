# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet arrow 'Arrow Function' b
(${1}) => {
 ${2}
}
endsnippet

snippet describe 'Unit Test Template' b
/**
 * @desc ${1}
 */
describe('${2}', () => {
  it('${3}', () => {${4}});
  it('', () => {});
  it('', () => {});
  it('', () => {});
});
endsnippet

snippet comment 'Commentary function' b
/**
 * @desc ${1}
 *
 * @params ${2}
 *
 * @return ${3}
 */
endsnippet

snippet desc 'Commentary function' b
/**
 * @desc ${1}
 */
endsnippet

snippet import 'Import React' b
import ${1} from './${2}';${3}
endsnippet


snippet require 'Require Node.js' b
const ${1} = require('./${2}');${3}
endsnippet

snippet const 'Variable' b
const ${1} = '${2}';${3}
endsnippet

snippet tag 'React Tag Element'
<${1}>
  ${2}
</${1}>
endsnippet

